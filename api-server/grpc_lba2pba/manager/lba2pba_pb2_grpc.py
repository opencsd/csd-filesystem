# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import lba2pba_pb2 as lba2pba__pb2


class QueryAgentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPba = channel.unary_unary(
                '/lba2pba.QueryAgent/GetPba',
                request_serializer=lba2pba__pb2.QGetPbaRequest.SerializeToString,
                response_deserializer=lba2pba__pb2.QGetPbaResponse.FromString,
                )


class QueryAgentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPba(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryAgentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPba': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPba,
                    request_deserializer=lba2pba__pb2.QGetPbaRequest.FromString,
                    response_serializer=lba2pba__pb2.QGetPbaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lba2pba.QueryAgent', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueryAgent(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPba(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lba2pba.QueryAgent/GetPba',
            lba2pba__pb2.QGetPbaRequest.SerializeToString,
            lba2pba__pb2.QGetPbaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePvc = channel.unary_unary(
                '/lba2pba.Manager/CreatePvc',
                request_serializer=lba2pba__pb2.CreatePvcRequest.SerializeToString,
                response_deserializer=lba2pba__pb2.CreatePvcResponse.FromString,
                )
        self.DeletePvc = channel.unary_unary(
                '/lba2pba.Manager/DeletePvc',
                request_serializer=lba2pba__pb2.DeletePvcRequest.SerializeToString,
                response_deserializer=lba2pba__pb2.DeletePvcResponse.FromString,
                )
        self.GetFM = channel.unary_unary(
                '/lba2pba.Manager/GetFM',
                request_serializer=lba2pba__pb2.GetFMRequest.SerializeToString,
                response_deserializer=lba2pba__pb2.GetFMResponse.FromString,
                )
        self.UpdateFM = channel.unary_unary(
                '/lba2pba.Manager/UpdateFM',
                request_serializer=lba2pba__pb2.UpdateFMRequest.SerializeToString,
                response_deserializer=lba2pba__pb2.UpdateFMResponse.FromString,
                )


class ManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePvc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePvc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFM(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFM(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePvc': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePvc,
                    request_deserializer=lba2pba__pb2.CreatePvcRequest.FromString,
                    response_serializer=lba2pba__pb2.CreatePvcResponse.SerializeToString,
            ),
            'DeletePvc': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePvc,
                    request_deserializer=lba2pba__pb2.DeletePvcRequest.FromString,
                    response_serializer=lba2pba__pb2.DeletePvcResponse.SerializeToString,
            ),
            'GetFM': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFM,
                    request_deserializer=lba2pba__pb2.GetFMRequest.FromString,
                    response_serializer=lba2pba__pb2.GetFMResponse.SerializeToString,
            ),
            'UpdateFM': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFM,
                    request_deserializer=lba2pba__pb2.UpdateFMRequest.FromString,
                    response_serializer=lba2pba__pb2.UpdateFMResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lba2pba.Manager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Manager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePvc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lba2pba.Manager/CreatePvc',
            lba2pba__pb2.CreatePvcRequest.SerializeToString,
            lba2pba__pb2.CreatePvcResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePvc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lba2pba.Manager/DeletePvc',
            lba2pba__pb2.DeletePvcRequest.SerializeToString,
            lba2pba__pb2.DeletePvcResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lba2pba.Manager/GetFM',
            lba2pba__pb2.GetFMRequest.SerializeToString,
            lba2pba__pb2.GetFMResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lba2pba.Manager/UpdateFM',
            lba2pba__pb2.UpdateFMRequest.SerializeToString,
            lba2pba__pb2.UpdateFMResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TraceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/lba2pba.Trace/Get',
                request_serializer=lba2pba__pb2.TGetPbaRequest.SerializeToString,
                response_deserializer=lba2pba__pb2.TGetPbaResponse.FromString,
                )


class TraceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TraceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=lba2pba__pb2.TGetPbaRequest.FromString,
                    response_serializer=lba2pba__pb2.TGetPbaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lba2pba.Trace', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Trace(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lba2pba.Trace/Get',
            lba2pba__pb2.TGetPbaRequest.SerializeToString,
            lba2pba__pb2.TGetPbaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class WorkerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/lba2pba.Worker/Get',
                request_serializer=lba2pba__pb2.WGetPbaRequest.SerializeToString,
                response_deserializer=lba2pba__pb2.WGetPbaResponse.FromString,
                )


class WorkerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=lba2pba__pb2.WGetPbaRequest.FromString,
                    response_serializer=lba2pba__pb2.WGetPbaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lba2pba.Worker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Worker(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lba2pba.Worker/Get',
            lba2pba__pb2.WGetPbaRequest.SerializeToString,
            lba2pba__pb2.WGetPbaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
